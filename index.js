const t="http://www.w3.org/2000/svg",e=(e,n,r)=>{const s=document.createElementNS(t,"line");return s.setAttributeNS(null,"x1",e.x.toString()),s.setAttributeNS(null,"y1",e.y.toString()),s.setAttributeNS(null,"x2",n.x.toString()),s.setAttributeNS(null,"y2",n.y.toString()),s.setAttributeNS(null,"stroke",r),s.setAttributeNS(null,"stroke-width","1%"),s},n=t=>{const n=t.getAttribute("viewBox");if(null===n)throw new Error("svg element has no viewBox");const[,,r,s]=n.split(" ").map((t=>parseInt(t,10)));t.appendChild(e({x:r/2,y:0},{x:r/2,y:s},"#DDD")),t.appendChild(e({x:0,y:s/2},{x:r,y:s/2},"#DDD"))},r=(t,e,n,r)=>{t.save(),t.lineWidth=r,t.strokeStyle="#DDD",t.beginPath(),t.moveTo(e.x,e.y),t.lineTo(n.x,n.y),t.stroke(),t.restore()},s=(e,n)=>{const{strokes:s,transform:o,viewBox:i}=e,{includeGrid:a,pauseRatio:l,totalStrokeDuration:u}=n,h=s.map((t=>(t=>{const{clipPath:e,strokePath:n,strokePathLength:r}=t;return{clipPath:null===e?null:new Path2D(e),strokePath:new Path2D(n),strokePathLength:r}})(t))),c=document.createElement("canvas"),[,,d,p]=i.split(" ").map((t=>parseInt(t,10)));c.width=d,c.height=p;const m=c.getContext("2d",{willReadFrequently:!0});if(null===m)throw new Error("Could not get context from canvas!");let S=null;const g=1e3*u,w=s.length,k=g*w,N=n=>{m.save();!m.getImageData(0,0,c.width,c.height).data.some((t=>0!==t))&&(S=null),(null===S||n-S>k)&&(S=n);const s=n-S;0===s&&(m.clearRect(0,0,c.width,c.height),a&&(t=>{const{width:e,height:n}=t.canvas;r(t,{x:e/2,y:0},{x:e/2,y:n},Math.ceil(e/100)),r(t,{x:0,y:n/2},{x:e,y:n/2},Math.ceil(n/100))})(m));const i=Math.trunc(s/g),u=Math.min(1,s%g/g/(1-l)),{clipPath:w,strokePath:b,strokePathLength:f}=h[i];if(m.scale(c.width/d,c.height/p),null!==o){const e=(e=>{const n=document.createElementNS(t,"svg");n.setAttributeNS(null,"transform",e);const r=n.transform.baseVal.consolidate();if(null===r)throw new Error("Could not get svg transform!");const{a:s,b:o,c:i,d:a,e:l,f:u}=r.matrix;return t=>{t.transform(s,o,i,a,l,u)}})(o);e(m)}m.fillStyle="none",m.strokeStyle="#000",m.lineCap="round",m.lineJoin="round",m.lineWidth=e.strokeWidth,m.setLineDash([f*u,f*(1-u)]),null!==w&&m.clip(w),m.stroke(b),m.restore(),window.requestAnimationFrame(N)};window.requestAnimationFrame(N);return document.addEventListener("visibilitychange",(()=>{S=null})),c},o=e=>{const n=document.createElementNS(t,"path");return n.setAttributeNS(null,"d",e),Math.ceil(n.getTotalLength())},i=async t=>{const e=`https://cdn.jsdelivr.net/npm/hanzi-writer-data/${t}.json`,n=await fetch(e,{cache:"no-store"}),r=await n.json(),s=[];for(let t=0;t<Math.min(r.strokes.length,r.medians.length);t+=1){const e=r.medians[t].map(((t,e)=>[0===e?"M":"L",t[0].toString(),t[1].toString()].join(" "))).join(" ");s.push({clipPath:r.strokes[t],strokePath:e,strokePathLength:o(e)})}return{character:t,strokeWidth:128,strokes:s,transform:"scale(1, -1) translate(0, -900)",type:"zh",viewBox:"0 0 1024 1024"}},a=async t=>{const e=t.codePointAt(0)?.toString(16).padStart(5,"0");if(void 0===e)throw new Error("characterCode is undefined!");const n=`https://cdn.jsdelivr.net/gh/KanjiVG/kanjivg/kanji/${`${e}.svg`}`,r=await fetch(n,{cache:"no-store"}),s=await r.text(),i=(new DOMParser).parseFromString(s,"image/svg+xml"),a=i.querySelector("svg")?.getAttribute("viewBox");if(null==a)throw new Error("viewBox is null or undefined!");const l=Array.from(i.querySelectorAll("path")).sort(((t,e)=>{const[n,r]=[t,e].map((t=>{const e=t.getAttribute("id");if(null===e)throw new Error("id is null!");return parseInt(e.substring(e.indexOf("-s")),10)}));return n-r})).map((t=>{const e=t.getAttribute("d");if(null===e)throw new Error("d is null!");return e})).map((t=>({clipPath:null,strokePath:t,strokePathLength:o(t)}))),u=Array.from(i.querySelectorAll("g[style]")).map((t=>parseFloat(t.style.getPropertyValue("stroke-width")))).find((t=>!isNaN(t)&&isFinite(t)));if(void 0===u)throw new Error("strokeWidth is undefined!");return{character:t,strokeWidth:u,strokes:l,transform:null,type:"ja",viewBox:a}},l=t=>{const{pauseRatio:e,totalStrokeDuration:n}=t;if(isNaN(e))throw new RangeError("pauseRatio is NaN!");if(e<0)throw new RangeError("pauseRatio cannot be < 0!");if(e>=1)throw new RangeError("pauseRatio cannot be >= 1!");if(isNaN(n))throw new RangeError("totalStrokeDuration is NaN!");if(n<=0)throw new RangeError("totalStrokeDuration cannnot be <= 0!");if(!isFinite(n))throw new RangeError("totalStrokeDuration must be finite!")},u=(e,r)=>{const s=document.createElementNS(t,"svg");s.setAttribute("xmlns",t),s.setAttributeNS(null,"viewBox",e.viewBox),r.includeGrid&&n(s);const o=document.createElementNS(t,"g");null!==e.transform&&o.setAttributeNS(null,"transform",e.transform),s.appendChild(o);const i=[];for(let n=0;n<e.strokes.length;n+=1){const r=e.strokes[n],s=document.createElementNS(t,"path");if(s.setAttributeNS(null,"d",r.strokePath),null!==r.clipPath){const i=`${e.character}-${e.type}-clipPath-${n}`,a=document.createElementNS(t,"clipPath");a.setAttributeNS(null,"id",i),o.appendChild(a);const l=document.createElementNS(t,"path");l.setAttributeNS(null,"d",r.clipPath),a.appendChild(l),s.setAttributeNS(null,"clip-path",`url(#${i})`)}const a=`${e.character}-${e.type}-strokePath-${n}`;i.push(a),s.setAttributeNS(null,"id",a),s.setAttributeNS(null,"fill","none"),s.setAttributeNS(null,"stroke","#000"),s.setAttributeNS(null,"stroke-linecap","round"),s.setAttributeNS(null,"stroke-linejoin","round"),o.appendChild(s)}const a=((e,n,r)=>{const{strokeWidth:s,strokes:o}=e,{pauseRatio:i,totalStrokeDuration:a}=r,l=Math.min(o.length,n.length),u=document.createElementNS(t,"style"),h=[],c=a*l;for(let t=0;t<l;t+=1){const{strokePathLength:e}=o[t],r=n[t],u=t/l*100,d=(t+(1-i))/l*100,p=t*a;h.push(`@keyframes dash-${r}`),h.push("{"),p>0&&h.push(`0% { stroke-dasharray: 0 ${e}; }`),h.push(`${u}% { stroke-dasharray: 0 ${e}; animation-timing-function: linear; }`),d<100&&h.push(`${d}% { stroke-dasharray: ${e} 0; }`),h.push(`100% { stroke-dasharray: ${e} 0; }`),h.push("}"),h.push(`@keyframes width-${r}`),h.push("{"),p>0&&h.push("0% { stroke-width: 0; animation-timing-function: steps(1, end); }"),h.push(`${u}% { stroke-width: ${s}; }`),d<100&&h.push(`${d}% { stroke-width: ${s}; }`),h.push(`100% { stroke-width: ${s}; }`),h.push("}"),h.push(`#${r} { animation: dash-${r} ${c}s infinite, width-${r} ${c}s infinite; }`)}return u.appendChild(document.createTextNode(h.join(" "))),u})(e,i,r);return o.appendChild(a),s},h=(e,n,r)=>{const{strokes:s}=e,{pauseRatio:o,totalStrokeDuration:i}=n,{strokePathLength:a}=s[r],l=s.length,u=i*l,h=r/l,c=(r+(1-o))/l,d=[],p=[];r*i>0&&(d.push("0"),p.push(`0 ${a}`)),d.push(h.toString()),p.push(`0 ${a}`),c<1&&(d.push(c.toString()),p.push(`${a} 0`)),d.push("1"),p.push(`${a} 0`);const m=document.createElementNS(t,"animate");return m.setAttributeNS(null,"attributeName","stroke-dasharray"),m.setAttributeNS(null,"repeatCount","indefinite"),m.setAttributeNS(null,"dur",u.toString()),m.setAttributeNS(null,"calcMode","linear"),m.setAttributeNS(null,"keyTimes",d.join(";")),m.setAttributeNS(null,"values",p.join(";")),m},c=(e,n,r)=>{const{strokeWidth:s,strokes:o}=e,{pauseRatio:i,totalStrokeDuration:a}=n,l=o.length,u=a*l,h=r/l,c=(r+(1-i))/l,d=[],p=[];r*a>0&&(d.push("0"),p.push("0")),d.push(h.toString()),p.push(s.toString()),c<1&&(d.push(c.toString()),p.push(s.toString())),d.push("1"),p.push(s.toString());const m=document.createElementNS(t,"animate");return m.setAttributeNS(null,"attributeName","stroke-width"),m.setAttributeNS(null,"repeatCount","indefinite"),m.setAttributeNS(null,"dur",u.toString()),m.setAttributeNS(null,"calcMode","discrete"),m.setAttributeNS(null,"keyTimes",d.join(";")),m.setAttributeNS(null,"values",p.join(";")),m},d=(e,r)=>{const{character:s,strokes:o,transform:i,type:a,viewBox:l}=e,u=document.createElementNS(t,"svg");u.setAttribute("xmlns",t),u.setAttributeNS(null,"viewBox",l),r.includeGrid&&n(u);const d=document.createElementNS(t,"g");null!==i&&d.setAttributeNS(null,"transform",i),u.appendChild(d);for(let n=0;n<o.length;n+=1){const{clipPath:i,strokePath:l}=o[n],u=document.createElementNS(t,"path");if(u.setAttributeNS(null,"d",l),null!==i){const e=`${s}-${a}-clipPath-${n}`;u.setAttributeNS(null,"clip-path",`url(#${e})`);const r=document.createElementNS(t,"clipPath");r.setAttributeNS(null,"id",e),d.appendChild(r);const o=document.createElementNS(t,"path");o.setAttributeNS(null,"d",i),r.appendChild(o)}u.setAttributeNS(null,"fill","none"),u.setAttributeNS(null,"stroke","#000"),u.setAttributeNS(null,"stroke-linecap","round"),u.setAttributeNS(null,"stroke-linejoin","round"),u.appendChild(h(e,r,n)),u.appendChild(c(e,r,n)),d.appendChild(u)}return u},p=t=>{if(1!==t.length)throw new Error("Must be a single character!")},m=(t,e,n)=>{const r={includeGrid:void 0===n.includeGrid||n.includeGrid,pauseRatio:void 0===n.pauseRatio?.2:n.pauseRatio,totalStrokeDuration:void 0===n.totalStrokeDuration?1:n.totalStrokeDuration};l(r);const o=(t=>{switch(t){case"zh":return i;case"ja":return a;default:throw new Error("Unsupported type!")}})(t);switch(e){case"svg-css":return async t=>{p(t);const e=await o(t);return u(e,r)};case"svg-smil":case"svg":return async t=>{p(t);const e=await o(t);return d(e,r)};case"canvas":return async t=>{p(t);const e=await o(t);return s(e,r)};default:throw new Error("Unsupported output!")}};export{m as strokes};